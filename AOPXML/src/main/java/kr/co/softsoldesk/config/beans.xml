<?xml version="1.0" encoding="UTF-8"?>

<beans xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context.xsd
							http://www.springframework.org/schema/aop
							http://www.springframework.org/schema/aop/spring-aop.xsd"
							xmlns="http://www.springframework.org/schema/beans"
							xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
							xmlns:context="http://www.springframework.org/schema/context"
							xmlns:aop="http://www.springframework.org/schema/aop">
							
	<bean id="xml1" class="kr.co.softsoldesk.beans.TestBean"/>
	<bean id="advisor1" class="kr.co.softsoldesk.advisor.AdvisorClass"/>
	<!-- AOP 문법 사용 -->
	<aop:config>
		<aop:aspect ref="advisor1">
		<!-- point = 메서드 -->
		<aop:pointcut id="point1" expression="execution(* method1())"/>
		<aop:before method="beforeMethod" pointcut-ref="point1"/>
		<aop:after method="afterMethod" pointcut-ref="point1"/>
		<aop:around method="aroundMethod" pointcut-ref="point1"/>
		<aop:after-returning method="afterReturningMethod" pointcut-ref="point1"/>
		<aop:after-throwing method="afterThrowingMethod" pointcut-ref="point1" throwing="e1"/>
		<!-- method1메서드가 실행되기 전에 beforemethod가 나와! -->
		</aop:aspect>
	</aop:config>
</beans>
							
